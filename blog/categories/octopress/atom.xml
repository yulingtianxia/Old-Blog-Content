<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: Octopress | 玉令天下的Blog]]></title>
  <link href="http://yulingtianxia.com/blog/categories/octopress/atom.xml" rel="self"/>
  <link href="http://yulingtianxia.com/"/>
  <updated>2014-05-04T21:17:02+08:00</updated>
  <id>http://yulingtianxia.com/</id>
  <author>
    <name><![CDATA[玉令天下]]></name>
    <email><![CDATA[yulingtianxia@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[MacOSX10.9上用Octopress和GitHub搭建个人博客]]></title>
    <link href="http://yulingtianxia.com/blog/2014/04/05/macosx10-dot-9shang-yong-octopresshe-githubda-jian-ge-ren-bo-ke/"/>
    <updated>2014-04-05T14:28:54+08:00</updated>
    <id>http://yulingtianxia.com/blog/2014/04/05/macosx10-dot-9shang-yong-octopresshe-githubda-jian-ge-ren-bo-ke</id>
    <content type="html"><![CDATA[<p>网上已经有很多关于搭建Octopress的文章了，但我写这篇文章的目的是帮助Mac新手们搭建自己的Octopress，尤其是最新的Mavericks系统</p>

<p>这篇博文包括：</p>

<ul>
<li>Octopress搭建</li>
<li>Github Page 部署</li>
<li>Blog的美化工作</li>
</ul>


<!-- more -->


<hr />

<h1>Octopress搭建</h1>

<p>众所周知，MacOSX自带Ruby，10.9系统带了两个版本的Ruby：1.8和2.0，因为Octopress需要Ruby1.9.3以上的支持，所以Mavericks自带的Ruby2.0是可以胜任的，新手们可以松一口气了。<br/>
如果没有安装command line tools，可以直接安装Xcode。Xcode5之后，command line tools都是跟随Xcode自带的，不用单独安装，想卸载也就麻烦了，可以在Xcode中Preferences->Locations中查看command line tools版本。</p>

<p>系统没升级到最新版的童鞋，可以打开终端（terminal）通过下面的命令查看自己的Ruby版本：</p>

<pre><code>ruby --version
</code></pre>

<p>没安装RVM的童鞋运行下面的命令：</p>

<pre><code>curl -L https://get.rvm.io | bash -s stable --ruby
</code></pre>

<p>下面我们需要从Github上clone下Octopress</p>

<pre><code>git clone git://github.com/imathis/octopress.git octopress
</code></pre>

<p>这条命令将octopress的源码下载到了你个人文件夹下的octopress文件夹，如果对git命令不太熟，可以在<a href="https://mac.github.com">这里</a>下载Github的Mac客户端，关于Github的使用，网上有很多教程。<br/>
下一步，安装依赖</p>

<pre><code>cd octopress ＃进入octopress目录
gem install bundler
</code></pre>

<p>这里碰到的问题可能有两种：<br/>
1. 权限不够，无法访问到一些文件夹<br/>
2. 等了很久没有反应<br/>
如果你之前对Linux比较熟，第一个问题可以很简单的解决，这是因为一些文件夹需要root权限访问，运行</p>

<pre><code>sudo gem install bundler
</code></pre>

<p>提示输入密码的时候，输入你自己的MacOSX开机密码后回车，注意输入密码的过程中终端无任何显示，这跟Linux一样<br/>
如果半天都没有反应，这是因为rubygems.org 的文件资源被墙了，可以在<a href="http://ruby.taobao.org">这里</a>查看解决方法，或者干脆翻墙，推荐一款Mac上比较傻瓜式的翻墙软件－－<a href="http://macappbox.com/yubaibai/">鱼摆摆</a>,我个人比较推荐翻墙。</p>

<p>接下来运行：</p>

<pre><code>bundle install
</code></pre>

<p>不出意外，肯定会出错，最后一句应该是“Make sure that <code>gem install RedCloth -v '4.2.9'</code> succeeds before bundling.”再往前追寻问题的根源，会发现这么一句“clang: error: unknown argument: &lsquo;-multiply_definedsuppress&rsquo; [-Wunused-command-line-argument-hard-err”。<br/>
这是因为Xcode 5.1的LLVM编译器将未识别的命令行选项认为是error，导致诸如Python本地拓展和Ruby Gem报错，解决方案：在执行命令行前加ARCHFLAGS=-Wno-error=unused-command-line-argument-hard-error-in-future，这样就忽略了报错。感谢<a href="http://www.andrewhay.ca/archives/2558?utm_source=tuicool">Andrew Hay的文章</a>帮我解决了问题。<br/>
所以应该这样：</p>

<pre><code>ARCHFLAGS=-Wno-error=unused-command-line-argument-hard-error-in-future bundle install
</code></pre>

<p>问题解决<br/>
最后安装默认的主题</p>

<pre><code>rake install    
</code></pre>

<p>如果出现“You have already activated rake 10.3.1, but your Gemfile requires rake 0.9.6. Prepending <code>bundle exec</code> to your command may solve this.”这样的提示，有三种解决方法：<br/>
1. 运行<code>bundle update</code>
2. 按照提示在前面加上<code>bundle exec</code>，即运行<code>bundle exec rake install</code>
3. 卸载不一样的版本 gem uninstall rake -v=10.3.1
这三种方法建议先用方法1，如果不行再用方法3，方法2是无奈之举</p>

<p><strong>关于创建博文</strong></p>

<pre><code>rake new_post["first post"]＃双引号中为博文标题，可以自己定义，生成markdown文件
rake generate ＃生成HTML文件
</code></pre>

<p>这里推荐一个markdown编辑器<a href="http://mouapp.com">Mou</a>，markdown是用来编写我们博客的语言，文件后缀名为md或markdown，学过Latex的童鞋可能会了解得更快一些，用markdown编写HTML版面是再好不过得了，markdown速成<a href="http://www.ituring.com.cn/article/23">传送门</a>。网上教程也挺多的，语法风格跟Latex有点像。</p>

<h1>Github Page 部署</h1>

<p>首先要有一个Github账号，假设用户名为username，那么新建一个仓库，名字叫“username.github.io”，Github会自动识别它为你的个人页面。你可以通过username.github.io这个网址来访问你部署的静态网页。创建完成后，获取你这个仓库的Git Url，SSH或者Http协议的都可以，然后执行<code>rake setup_github_pages</code>，当提示你的时候输入你前面创建的仓库的Git Url。比如<code>git@github.com:username/username.github.com.git</code><br/>
你会发现octopress文件夹中多了_deploy目录，并将这个目录当作master分支，而其余的文件都作为新建立的source分支。octopress原理是在source分支保存框架所需要的文件，还有博客的markdown文件，然后每次将生成的html文件放入master分支，通过username.github.io访问到的是已经生成好的master分支的文件，也就是_deploy文件夹的内容。<br/>
运行下面代码来生成部署网页到Github：</p>

<pre><code>rake generate
rake deploy
</code></pre>

<p>现在访问你的网站，已经有了一个页面，使用的是系统默认主题。为了避免博客的源码受到破坏，需要把source分支也commit上去。不会用git命令的同学可以用Github的Mac客户端。</p>

<pre><code>git add .
git commit -m 'your message'
git push origin source
</code></pre>

<p>如果你有自己的域名，可以通过在仓库中新建CNAME文件进行配置映射，这里不再细说。</p>

<h1>Blog的美化工作</h1>

<p>可以用<a href="https://github.com/shashankmehta/greyshade">greyshade</a>或者<a href="https://github.com/tommy351/Octopress-Theme-Slash">slash</a>主题美化博客，根据个人喜好了。需要注意的是，greyshade这个主题有些不足之处，比如，disqus实效，还有如何添加新浪微博链接，请看<a href="http://bryanone.com/blog/2014/03/01/problem-with-greyshade/">这里</a>和<a href="http://imallen.com/blog/2013/05/12/add-support-for-weibo-and-dribbble-to-greyshade.html">这里</a>。如果首页左侧没有显示title和subtitle等信息，可以修改/source/_includes/header.html文件，添加</p>

<pre><code>&lt;h1&gt;&lt;a href="/"&gt;玉令天下的Blog&lt;/a&gt;&lt;/h1&gt;
&lt;p class="subtitle"&gt;I'm not a hacker.&lt;/p&gt;
</code></pre>

<p>修改_config.yml文件，可以配置博客的参数，网上有很多详细的教程来说明每个属性是干什么的，需要注意的一点就是冒号后面一定要加空格，否则编译不通过。建议下载一个Sublime Text来打开这些前台文件，增加效率。博客头像和Github一样采用<a href="www.gravatar.com">gravatar</a>的头像托管服务，在_config.yml文件中的email属性中填入你在gravatar的邮件或者在email_md5属性中填入md5码也可。<br/>
<strong>关于添加标签云效果</strong><br/>
1. 将<a href="https://github.com/yulingtianxia/yulingtianxia.github.io/blob/source/plugins/category_cloud.rb">category_cloud.rb</a>复制到你的<code>/octopress/plugins/</code>文件夹下<br/>
2. 拷贝<a href="https://github.com/yulingtianxia/yulingtianxia.github.io/blob/source/source/_includes/custom/asides/category_cloud.html">category_cloud.html</a>到你的<code>octopress/source/_includes/custom/asides/</code>目录<br/>
3. 在你的 <code>octopress/_config.yml</code> 文件中的<code>default_asides</code>项中加入第二步添加的路径：<code>custom/asides/category_cloud.html</code><br/>
4. 拷贝<a href="https://github.com/yulingtianxia/yulingtianxia.github.io/blob/source/source/javascripts/tagcloud.swf">tagcloud.swf</a>到<code>source/javascripts/</code>文件夹<br/>
如果想修改标签云的颜色可以在<code>category_cloud.rb</code>文件中改变：<br/>
```</p>

<pre><code>    @opts['bgcolor'] = '#3D4349'
  @opts['tcolor1'] = '#8B85C3'
  @opts['tcolor2'] = '#C03999'
  @opts['hicolor'] = '#ffffff'
</code></pre>

<p><code>``
</code>tcolor1<code>为文章数量比较多的分类颜色  
</code>tcolor2<code>为普通分类颜色  
</code>hicolor`为鼠标高亮颜色<br/>
诸如添加Google Analyse和百度统计，添加分享和评论系统，还有版权信息，网上的教程也很多，参考<a href="http://www.cnblogs.com/oec2003/archive/2013/05/31/3109577.html">oec2003</a>和<a href="http://beyondvincent.com/blog/2013/07/27/107-hello-page-of-github/">破船</a>的文章，本文主要是介绍MacOSX上面的部署工作。</p>
]]></content>
  </entry>
  
</feed>
