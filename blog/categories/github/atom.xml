<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: GitHub | 玉令天下的Blog]]></title>
  <link href="http://yulingtianxia.com/blog/categories/github/atom.xml" rel="self"/>
  <link href="http://yulingtianxia.com/"/>
  <updated>2014-10-07T19:25:53+08:00</updated>
  <id>http://yulingtianxia.com/</id>
  <author>
    <name><![CDATA[玉令天下]]></name>
    <email><![CDATA[yulingtianxia@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[Publish Your Pods on CocoaPods with Trunk]]></title>
    <link href="http://yulingtianxia.com/blog/2014/05/26/publish-your-pods-on-cocoapods-with-trunk/"/>
    <updated>2014-05-26T12:03:08+08:00</updated>
    <id>http://yulingtianxia.com/blog/2014/05/26/publish-your-pods-on-cocoapods-with-trunk</id>
    <content type="html"><![CDATA[<h2>简介</h2>

<p>2014年5月20日，CocoaPods不再接受向<a href="git@github.com:CocoaPods/Specs.git">CocoaPods/Specs</a>的pull request，官方的说法是为了安全考虑，防止每个人的pod被其他人修改，于是CocoaPods团队开发了trunk服务，这样每个人都是其发布的pod的owner，没有权限的人无法修改，这样更安全。</p>

<p>更改后的提交架构是这样的：(来自官方图片)</p>

<p><img src="http://yulingtianxia.qiniudn.com/140353388207.png" alt="" /></p>

<!--more-->


<p>以前的podspec文件都是ruby格式，而trunk为我们带来了更轻便的json格式，你后你可以用json来配置你的pod了。不用担心过去我们发布的pod，他们依然健在，并且trunk会将podspec文件转化为podspec.json文件。</p>

<p>这里给出一个官方的介绍链接（自备梯子）：<a href="http://blog.cocoapods.org/CocoaPods-Trunk/#transition">http://blog.cocoapods.org/CocoaPods-Trunk/#transition</a></p>

<p><strong>废话不多说，简要介绍下如何使用trunk新建我们的pod：</strong></p>

<h2>开始注册</h2>

<p>trunk需要CocoaPods 0.33版本以上，用<code>pod --version</code>命令查看版本，如果版本低，需要升级：</p>

<p>```
sudo gem install cocoapods
pod setup</p>

<p>```</p>

<p>然后会一直卡在<code>Setting up CocoaPods master repo</code>这里，这条命令用于跟新本地电脑上的保存的Pods依赖库tree。由于每天有很多人会创建或者更新Pods依赖库，这条命令执行的时候会相当慢，还请耐心等待。我们需要经常执行这条命令，否则有新的Pods依赖库的时候执行pod search命令是搜不出来的。再开启一个终端，通过<code>cd  ~/.cocoapods</code>命令进入cocoapods根目录，然后通过<code>du -sh *</code>命令查看总的文件大小，如果隔一阵子会增加，那么说明一切正常，下载速度取决于你的网络。</p>

<p>更新完成后，下一步是注册trunk，这一步需要自备梯子，否则就会出现这种<a href="https://github.com/CocoaPods/CocoaPods/issues/2174">问题</a></p>

<p><code>
pod trunk register yulingtianxia@gmail.com 'Yang Xiaoyu' --description='macbook pro' --verbose
</code>
上面的命令是我注册时使用的，你需要把邮箱和名字以及描述替换成你的，加上<code>--verbose</code>可以输出详细debug信息，方便出错时查看。</p>

<p>注册后CocoaPods会给你的邮箱发送验证链接，点击后就注册成功了，可以用<code>pod trunk me</code>命令查看自己的注册信息：</p>

<p>```
bogon:YXYNumberAnimationLabel yangxiaoyu$ pod trunk me
  &ndash; Name:     Yang Xiaoyu
  &ndash; Email:    <a href="&#x6d;&#x61;&#105;&#x6c;&#116;&#111;&#58;&#121;&#x75;&#x6c;&#x69;&#110;&#x67;&#116;&#x69;&#97;&#x6e;&#x78;&#x69;&#97;&#64;&#103;&#109;&#x61;&#105;&#x6c;&#x2e;&#x63;&#111;&#109;">&#121;&#117;&#108;&#105;&#x6e;&#103;&#x74;&#105;&#97;&#110;&#x78;&#x69;&#x61;&#x40;&#103;&#109;&#x61;&#x69;&#x6c;&#46;&#x63;&#x6f;&#109;</a>
  &ndash; Since:    May 25th, 20:27
  &ndash; Sessions:</p>

<pre><code>- May 25th, 20:27 - September 30th, 22:41. IP: 23.228.209.171
</code></pre>

<p>  Description: macbook pro
```
上面是我的注册信息，CocoaPods不通过密码来验证用户，而是通过一个session token。</p>

<h2>部署你的Pod</h2>

<p>首先你需要建立一个podspec文件，这是我的podspec文件：</p>

<p>```
Pod::Spec.new do |s|
  s.name         = &ldquo;YXYNumberAnimationLabel&rdquo;
  s.version      = &ldquo;1.0.1&rdquo;
  s.summary      = &ldquo;一个可以动起来的数字Label&rdquo;
  s.description  = &lt;&lt;-DESC</p>

<pre><code>                通过设置数字变化的插值来展现动画效果
               DESC
</code></pre>

<p>  s.homepage     = &ldquo;<a href="https://github.com/yulingtianxia/YXYNumberAnimationLabel">https://github.com/yulingtianxia/YXYNumberAnimationLabel</a>&rdquo;</p>

<p>  s.license      = &lsquo;MIT&rsquo;
  s.author       = { &ldquo;YangXiaoyu&rdquo; => &ldquo;<a href="&#109;&#97;&#105;&#x6c;&#116;&#111;&#x3a;&#121;&#117;&#x6c;&#105;&#110;&#x67;&#116;&#x69;&#x61;&#110;&#120;&#105;&#97;&#x40;&#x67;&#109;&#x61;&#105;&#x6c;&#46;&#x63;&#111;&#x6d;">&#x79;&#117;&#108;&#105;&#x6e;&#103;&#116;&#x69;&#97;&#110;&#120;&#x69;&#97;&#x40;&#x67;&#109;&#97;&#105;&#108;&#x2e;&#99;&#x6f;&#109;</a>&rdquo; }
  s.social_media_url = &ldquo;<a href="http://twitter.com/yulingtianxia">http://twitter.com/yulingtianxia</a>&rdquo;
  s.source       = { :git => &ldquo;<a href="https://github.com/yulingtianxia/YXYNumberAnimationLabel.git">https://github.com/yulingtianxia/YXYNumberAnimationLabel.git</a>&rdquo;, :tag => s.version.to_s }</p>

<p>  s.platform     = :ios, &lsquo;6.0&rsquo;
  s.requires_arc = true</p>

<p>  s.source_files = &lsquo;YXYNumberAnimationLabel/<em>&rsquo;
  s.frameworks = &lsquo;Foundation&rsquo;, &lsquo;UIKit&rsquo;
  #s.private_header_files = &lsquo;Classes/ios/private/</em>.h&rsquo;</p>

<p>  #s.dependency &lsquo;FLKAutoLayout&rsquo;, &lsquo;~> 0.1&rsquo;
end
```
<strong>具体配置什么的大家走很熟悉，这里只是讲述使用trunk后需要注意的地方和新的操作</strong></p>

<p>在验证和上传你的podspec文件到trunk之前，需要将你的源码push到Github上，tag一个版本号并发布一个release版本，这样podspec文件中的<code>s.source</code>的值才能是准确的：</p>

<p><code>
git add -A &amp;&amp; git commit -m "Release 1.0.1."  
git tag '1.0.1'  
git push --tags  
git push origin master
</code></p>

<p>这两条命令是为pod添加版本号并打上tag:</p>

<p><code>
set the new version to 1.0.1
set the new tag to 1.0.1
</code></p>

<p>在你podspec文件下的路径运行<code>pod trunk push YXYNumberAnimationLabel.podspec</code> 命令，同样需要翻墙梯子自备，别忘了将<code>YXYNumberAnimationLabel.podspec</code>替换成你的podspec文件名。</p>

<p>pod trunk push命令做了如下三个工作：</p>

<ol>
<li>验证你本地的podspec文件（你也可以用<code>pod lib lint</code>命令来验证）</li>
<li>上传你的podspec文件到trunk</li>
<li>将你的podspec文件转化成trunk需要的JSON文件</li>
</ol>


<p>如果部署成功，CocosPods会在Twitter上@你</p>

<p>就像文章最开始的架构图描述的那样，你在trunk中的操作依然会在<a href="git@github.com:CocoaPods/Specs.git">CocoaPods/Specs</a>仓库中更新。以后再做更改时只需要更新版本号然后通过trunk来提交，不用向<a href="git@github.com:CocoaPods/Specs.git">CocoaPods/Specs</a>pull request并等待审核和merge了。</p>

<p>运行<code>pod setup</code>来更新你的Pods依赖库tree后，再使用<code>pod search YXYNumberAnimationLabel</code>命令来查找刚刚加入的名字叫<code>YXYNumberAnimationLabel</code>的依赖库：</p>

<p><code>
-&gt; YXYNumberAnimationLabel (1.0.1)
   一个可以动起来的数字Label
   pod 'YXYNumberAnimationLabel', '~&gt; 1.0.1'
   - Homepage: https://github.com/yulingtianxia/YXYNumberAnimationLabel
   - Source:   https://github.com/yulingtianxia/YXYNumberAnimationLabel.git
   - Versions: 1.0.1, 1.0.0 [master repo]
</code></p>

<h2>将其他人加入到你的Pod</h2>

<p>为了让其他人也有权限来和你一起建设你的代码，你需要运行下面的命令来赋予别人权限，假如我将<code>kyle@cocoapods.org</code>加入到我的名字叫<code>ARAnalytics</code>的库中，我需要运行下面的命令：</p>

<p><code>
pod trunk add-owner ARAnalytics kyle@cocoapods.org
</code></p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[GitHub Page build warning]]></title>
    <link href="http://yulingtianxia.com/blog/2014/05/02/github-page-build-warning/"/>
    <updated>2014-05-02T13:57:53+08:00</updated>
    <id>http://yulingtianxia.com/blog/2014/05/02/github-page-build-warning</id>
    <content type="html"><![CDATA[<p>几天前博主的GitHub Page闹了些小情绪：</p>

<!--more-->


<p></p>

<blockquote><p>The page build completed successfully, but returned the following warning:</p>

<p>GitHub Pages recently underwent some improvements (<a href="https://github.com/blog/1715-faster-more-awesome-github-pages">https://github.com/blog/1715-faster-more-awesome-github-pages</a>) to make your site faster and more awesome, but we&rsquo;ve noticed that <code>yulingtianxia.com</code> isn&rsquo;t properly configured to take advantage of these new features. While your site will continue to work just fine, updating your domain&rsquo;s configuration offers some additional speed and performance benefits. Instructions on updating your site&rsquo;s IP address can be found at <a href="https://help.github.com/articles/setting-up-a-custom-domain-with-github-pages#step-2-configure-dns-records,">https://help.github.com/articles/setting-up-a-custom-domain-with-github-pages#step-2-configure-dns-records,</a> and of course, you can always get in touch with a human at <a href="&#109;&#97;&#x69;&#x6c;&#116;&#111;&#x3a;&#x73;&#x75;&#112;&#x70;&#x6f;&#x72;&#x74;&#x40;&#103;&#105;&#x74;&#x68;&#x75;&#98;&#46;&#99;&#111;&#x6d;&#46;">&#115;&#117;&#112;&#x70;&#111;&#114;&#x74;&#x40;&#x67;&#x69;&#x74;&#x68;&#117;&#x62;&#x2e;&#99;&#111;&#109;&#x2e;</a> For the more technical minded folks who want to skip the help docs: your site&rsquo;s DNS records are pointed to a deprecated IP address.</p>

<p>For information on troubleshooting Jekyll see:</p>

<p><a href="https://help.github.com/articles/using-jekyll-with-pages#troubleshooting">https://help.github.com/articles/using-jekyll-with-pages#troubleshooting</a></p>

<p>If you have any questions please contact us at <a href="https://github.com/contact.">https://github.com/contact.</a></p></blockquote>

<p>也就是说只是warning而已，程序员根本不理睬的，加载速度慢点就慢点儿呗，可是。。。每次pushGitHub都发一次邮件啊，博主强迫症犯了，决心搞定它。<br/>
GitHub很贴心的给出了整改意见啊，也就是第一个URL：<a href="https://github.com/blog/1715-faster-more-awesome-github-pages  ">https://github.com/blog/1715-faster-more-awesome-github-pages  </a>
简单的说，就是因为我的自定义一级域名需要指向一个可以让GitHub Page加载更快的IP，或者是让我的子域名指向<code>username.github.io</code>(username为GitHub用户名，我的是yulingtianxia)，如果你没有自己的域名，那么根本不会出现warning邮件，因为<code>username.github.io</code>本身已经做了加速优化。<br/>
我在terminal中运行了dig命令：<br/>
<code>dig yulingtianxia.github.io +nostats +nocomments +nocmd</code><br/>
结果如下：<br/>
<code>
; &lt;&lt;&gt;&gt; DiG 9.8.3-P1 &lt;&lt;&gt;&gt; yulingtianxia.github.io +nostats +nocomments +nocmd
;; global options: +cmd
;yulingtianxia.github.io.   IN  A
yulingtianxia.github.io. 2684   IN  CNAME   github.map.fastly.net.
github.map.fastly.net.  7   IN  A   103.245.222.133
fastly.net.     12821   IN  NS  ns3.p04.dynect.net.
fastly.net.     12821   IN  NS  ns1.p04.dynect.net.
fastly.net.     12821   IN  NS  ns2.p04.dynect.net.
fastly.net.     12821   IN  NS  ns4.p04.dynect.net.
ns1.p04.dynect.net. 21893   IN  A   208.78.70.4
ns2.p04.dynect.net. 20599   IN  A   204.13.250.4
ns3.p04.dynect.net. 21929   IN  A   208.78.71.4
ns4.p04.dynect.net. 26356   IN  A   204.13.251.4
</code>
于是我在我的域名管理后台将我的一级域名<code>yulingtianxia.com</code>指向<code>103.245.222.133</code>，问题解决。</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[iOS的.gitignore]]></title>
    <link href="http://yulingtianxia.com/blog/2014/04/09/iosde-dot-gitignore/"/>
    <updated>2014-04-09T16:59:19+08:00</updated>
    <id>http://yulingtianxia.com/blog/2014/04/09/iosde-dot-gitignore</id>
    <content type="html"><![CDATA[<p>在多人一起开发XCode项目的时候，很多中间生成的临时文件并不需要加入到版本控制当中，所以记录下XCode需要用到的<code>.gitignore</code>文件</p>

<!-- more-->


<p>出处：<a href="https://github.com/github/gitignore/blob/master/Objective-C.gitignore">https://github.com/github/gitignore/blob/master/Objective-C.gitignore</a></p>

<p>```</p>

<h1>Xcode</h1>

<p>#
build/
<em>.pbxuser
!default.pbxuser
</em>.mode1v3
!default.mode1v3
<em>.mode2v3
!default.mode2v3
</em>.perspectivev3
!default.perspectivev3
xcuserdata
<em>.xccheckout
</em>.moved-aside
DerivedData
<em>.hmap
</em>.ipa
*.xcuserstate</p>

<h1>CocoaPods</h1>

<p>#</p>

<h1>We recommend against adding the Pods directory to your .gitignore. However</h1>

<h1>you should judge for yourself, the pros and cons are mentioned at:</h1>

<h1><a href="http://guides.cocoapods.org/using/using-cocoapods.html#should-i-ignore-the-pods-directory-in-source-control">http://guides.cocoapods.org/using/using-cocoapods.html#should-i-ignore-the-pods-directory-in-source-control</a></h1>

<p>#</p>

<h1>Pods/</h1>

<p>```</p>

<p>还有需要记住一点的是，使用IB进行界面设计，无论是xib文件还是storyboard，同一时间只能右一个人更改一个Window或VC，虽然XCode5之后xib和storyboard可读性大大增强，但是仍不像Android开发界面的xml格式那么普及，还是小心谨慎为好</p>
]]></content>
  </entry>
  
  <entry>
    <title type="html"><![CDATA[MacOSX10.9上用Octopress和GitHub搭建个人博客]]></title>
    <link href="http://yulingtianxia.com/blog/2014/04/05/macosx10-dot-9shang-yong-octopresshe-githubda-jian-ge-ren-bo-ke/"/>
    <updated>2014-04-05T14:28:54+08:00</updated>
    <id>http://yulingtianxia.com/blog/2014/04/05/macosx10-dot-9shang-yong-octopresshe-githubda-jian-ge-ren-bo-ke</id>
    <content type="html"><![CDATA[<p>网上已经有很多关于搭建Octopress的文章了，但我写这篇文章的目的是帮助Mac新手们搭建自己的Octopress，尤其是最新的Mavericks系统</p>

<p>这篇博文包括：</p>

<ul>
<li>Octopress搭建</li>
<li>Github Page 部署</li>
<li>Blog的美化工作</li>
</ul>


<!-- more -->


<hr />

<h1>Octopress搭建</h1>

<p>众所周知，MacOSX自带Ruby，10.9系统带了两个版本的Ruby：1.8和2.0，因为Octopress需要Ruby1.9.3以上的支持，所以Mavericks自带的Ruby2.0是可以胜任的，新手们可以松一口气了。<br/>
如果没有安装command line tools，可以直接安装Xcode。Xcode5之后，command line tools都是跟随Xcode自带的，不用单独安装，想卸载也就麻烦了，可以在Xcode中Preferences->Locations中查看command line tools版本。</p>

<p>系统没升级到最新版的童鞋，可以打开终端（terminal）通过下面的命令查看自己的Ruby版本：</p>

<pre><code>ruby --version
</code></pre>

<p>没安装RVM的童鞋运行下面的命令：</p>

<pre><code>curl -L https://get.rvm.io | bash -s stable --ruby
</code></pre>

<p>下面我们需要从Github上clone下Octopress</p>

<pre><code>git clone git://github.com/imathis/octopress.git octopress
</code></pre>

<p>这条命令将octopress的源码下载到了你个人文件夹下的octopress文件夹，如果对git命令不太熟，可以在<a href="https://mac.github.com">这里</a>下载Github的Mac客户端，关于Github的使用，网上有很多教程。<br/>
下一步，安装依赖</p>

<pre><code>cd octopress ＃进入octopress目录
gem install bundler
</code></pre>

<p>这里碰到的问题可能有两种：<br/>
1. 权限不够，无法访问到一些文件夹<br/>
2. 等了很久没有反应<br/>
如果你之前对Linux比较熟，第一个问题可以很简单的解决，这是因为一些文件夹需要root权限访问，运行</p>

<pre><code>sudo gem install bundler
</code></pre>

<p>提示输入密码的时候，输入你自己的MacOSX开机密码后回车，注意输入密码的过程中终端无任何显示，这跟Linux一样<br/>
如果半天都没有反应，这是因为rubygems.org 的文件资源被墙了，可以在<a href="http://ruby.taobao.org">这里</a>查看解决方法，或者干脆翻墙，推荐<a href="http://tizipro.com/?r=ee0508bc191f5651">云梯VPN</a>科学上网，我个人比较推荐翻墙。</p>

<p>PS：云梯VPN优惠链接：<a href="http://tizipro.com/?r=ee0508bc191f5651">http://tizipro.com/?r=ee0508bc191f5651</a></p>

<p>接下来运行：</p>

<pre><code>bundle install
</code></pre>

<p>不出意外，肯定会出错，最后一句应该是“Make sure that <code>gem install RedCloth -v '4.2.9'</code> succeeds before bundling.”再往前追寻问题的根源，会发现这么一句“clang: error: unknown argument: &lsquo;-multiply_definedsuppress&rsquo; [-Wunused-command-line-argument-hard-err”。<br/>
这是因为Xcode 5.1的LLVM编译器将未识别的命令行选项认为是error，导致诸如Python本地拓展和Ruby Gem报错，解决方案：在执行命令行前加ARCHFLAGS=-Wno-error=unused-command-line-argument-hard-error-in-future，这样就忽略了报错。感谢<a href="http://www.andrewhay.ca/archives/2558?utm_source=tuicool">Andrew Hay的文章</a>帮我解决了问题。<br/>
所以应该这样：</p>

<pre><code>ARCHFLAGS=-Wno-error=unused-command-line-argument-hard-error-in-future bundle install
</code></pre>

<p>问题解决<br/>
最后安装默认的主题</p>

<pre><code>rake install    
</code></pre>

<p>如果出现“You have already activated rake 10.3.1, but your Gemfile requires rake 0.9.6. Prepending <code>bundle exec</code> to your command may solve this.”这样的提示，有三种解决方法：<br/>
1. 运行<code>bundle update</code>
2. 按照提示在前面加上<code>bundle exec</code>，即运行<code>bundle exec rake install</code>
3. 卸载不一样的版本 gem uninstall rake -v=10.3.1
这三种方法建议先用方法1，如果不行再用方法3，方法2是无奈之举</p>

<p><strong>关于创建博文</strong></p>

<pre><code>rake new_post["first post"]＃双引号中为博文标题，可以自己定义，生成markdown文件
rake generate ＃生成HTML文件
</code></pre>

<p>这里推荐一个markdown编辑器<a href="http://mouapp.com">Mou</a>，markdown是用来编写我们博客的语言，文件后缀名为md或markdown，学过Latex的童鞋可能会了解得更快一些，用markdown编写HTML版面是再好不过得了，markdown速成<a href="http://www.ituring.com.cn/article/23">传送门</a>。网上教程也挺多的，语法风格跟Latex有点像。</p>

<h1>Github Page 部署</h1>

<p>首先要有一个Github账号，假设用户名为username，那么新建一个仓库，名字叫“username.github.io”，Github会自动识别它为你的个人页面。你可以通过username.github.io这个网址来访问你部署的静态网页。创建完成后，获取你这个仓库的Git Url，SSH或者Http协议的都可以，然后执行<code>rake setup_github_pages</code>，当提示你的时候输入你前面创建的仓库的Git Url。比如<code>git@github.com:username/username.github.com.git</code><br/>
你会发现octopress文件夹中多了_deploy目录，并将这个目录当作master分支，而其余的文件都作为新建立的source分支。octopress原理是在source分支保存框架所需要的文件，还有博客的markdown文件，然后每次将生成的html文件放入master分支，通过username.github.io访问到的是已经生成好的master分支的文件，也就是_deploy文件夹的内容。<br/>
运行下面代码来生成部署网页到Github：</p>

<pre><code>rake generate
rake deploy
</code></pre>

<p>现在访问你的网站，已经有了一个页面，使用的是系统默认主题。为了避免博客的源码受到破坏，需要把source分支也commit上去。不会用git命令的同学可以用Github的Mac客户端。</p>

<pre><code>git add .
git commit -m 'your message'
git push origin source
</code></pre>

<p>如果你有自己的域名，可以通过在仓库中新建CNAME文件进行配置映射，这里不再细说。</p>

<h1>Blog的美化工作</h1>

<p>可以用<a href="https://github.com/shashankmehta/greyshade">greyshade</a>或者<a href="https://github.com/tommy351/Octopress-Theme-Slash">slash</a>主题美化博客，根据个人喜好了。需要注意的是，greyshade这个主题有些不足之处，比如，disqus实效，还有如何添加新浪微博链接，请看<a href="http://bryanone.com/blog/2014/03/01/problem-with-greyshade/">这里</a>和<a href="http://imallen.com/blog/2013/05/12/add-support-for-weibo-and-dribbble-to-greyshade.html">这里</a>。如果首页左侧没有显示title和subtitle等信息，可以修改/source/_includes/header.html文件，添加</p>

<pre><code>&lt;h1&gt;&lt;a href="/"&gt;玉令天下的Blog&lt;/a&gt;&lt;/h1&gt;
&lt;p class="subtitle"&gt;I'm not a hacker.&lt;/p&gt;
</code></pre>

<p>修改_config.yml文件，可以配置博客的参数，网上有很多详细的教程来说明每个属性是干什么的，需要注意的一点就是冒号后面一定要加空格，否则编译不通过。建议下载一个Sublime Text来打开这些前台文件，增加效率。博客头像和Github一样采用<a href="www.gravatar.com">gravatar</a>的头像托管服务，在_config.yml文件中的email属性中填入你在gravatar的邮件或者在email_md5属性中填入md5码也可。<br/>
<strong>关于添加标签云效果</strong><br/>
1. 将<a href="https://github.com/yulingtianxia/yulingtianxia.github.io/blob/source/plugins/category_cloud.rb">category_cloud.rb</a>复制到你的<code>/octopress/plugins/</code>文件夹下<br/>
2. 拷贝<a href="https://github.com/yulingtianxia/yulingtianxia.github.io/blob/source/source/_includes/custom/asides/category_cloud.html">category_cloud.html</a>到你的<code>octopress/source/_includes/custom/asides/</code>目录<br/>
3. 在你的 <code>octopress/_config.yml</code> 文件中的<code>default_asides</code>项中加入第二步添加的路径：<code>custom/asides/category_cloud.html</code><br/>
4. 拷贝<a href="https://github.com/yulingtianxia/yulingtianxia.github.io/blob/source/source/javascripts/tagcloud.swf">tagcloud.swf</a>到<code>source/javascripts/</code>文件夹<br/>
如果想修改标签云的颜色可以在<code>category_cloud.rb</code>文件中改变：<br/>
```</p>

<pre><code>    @opts['bgcolor'] = '#3D4349'
  @opts['tcolor1'] = '#8B85C3'
  @opts['tcolor2'] = '#C03999'
  @opts['hicolor'] = '#ffffff'
</code></pre>

<p><code>``
</code>tcolor1<code>为文章数量比较多的分类颜色  
</code>tcolor2<code>为普通分类颜色  
</code>hicolor`为鼠标高亮颜色<br/>
诸如添加Google Analyse和百度统计，添加分享和评论系统，还有版权信息，网上的教程也很多，参考<a href="http://www.cnblogs.com/oec2003/archive/2013/05/31/3109577.html">oec2003</a>和<a href="http://beyondvincent.com/blog/2013/07/27/107-hello-page-of-github/">破船</a>的文章，本文主要是介绍MacOSX上面的部署工作。</p>
]]></content>
  </entry>
  
</feed>
