<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

  <title><![CDATA[Category: social framework | 玉令天下的Blog]]></title>
  <link href="http://yulingtianxia.com/blog/categories/social-framework/atom.xml" rel="self"/>
  <link href="http://yulingtianxia.com/"/>
  <updated>2014-09-26T18:30:58+08:00</updated>
  <id>http://yulingtianxia.com/</id>
  <author>
    <name><![CDATA[玉令天下]]></name>
    <email><![CDATA[yulingtianxia@gmail.com]]></email>
  </author>
  <generator uri="http://octopress.org/">Octopress</generator>

  
  <entry>
    <title type="html"><![CDATA[SpriteKit截屏并分享至社交网络]]></title>
    <link href="http://yulingtianxia.com/blog/2014/04/22/spritekitjie-ping-bing-fen-xiang-zhi-she-jiao-wang-luo/"/>
    <updated>2014-04-22T17:36:25+08:00</updated>
    <id>http://yulingtianxia.com/blog/2014/04/22/spritekitjie-ping-bing-fen-xiang-zhi-she-jiao-wang-luo</id>
    <content type="html"><![CDATA[<p>本文讲述在用<code>SpriteKit</code>制作iOS游戏的时候，如何让在用户在达到某种成就后分享自己的成就或分数，并附上一张游戏截屏，然后发到社交网络上</p>

<!--more-->


<h2>SpriteKit截屏</h2>

<p>传统的截屏方法是用UIView的layer来读取渲染上下文，生成图片</p>

<p>&#8220;` objc</p>

<p>UIGraphicsBeginImageContext(self.view.frame.size); //currentView 当前的view
[self.view.layer renderInContext:UIGraphicsGetCurrentContext()];
UIImage *viewImage = UIGraphicsGetImageFromCurrentImageContext();
UIGraphicsEndImageContext();
<figure class='code'><figcaption><span></span></figcaption><div class="highlight"><table><tr><td class="gutter"><pre class="line-numbers"><span class='line-number'>1</span>
<span class='line-number'>2</span>
<span class='line-number'>3</span>
<span class='line-number'>4</span>
<span class='line-number'>5</span>
<span class='line-number'>6</span>
<span class='line-number'>7</span>
<span class='line-number'>8</span>
<span class='line-number'>9</span>
<span class='line-number'>10</span>
<span class='line-number'>11</span>
<span class='line-number'>12</span>
<span class='line-number'>13</span>
<span class='line-number'>14</span>
<span class='line-number'>15</span>
<span class='line-number'>16</span>
<span class='line-number'>17</span>
<span class='line-number'>18</span>
<span class='line-number'>19</span>
<span class='line-number'>20</span>
<span class='line-number'>21</span>
<span class='line-number'>22</span>
<span class='line-number'>23</span>
<span class='line-number'>24</span>
<span class='line-number'>25</span>
<span class='line-number'>26</span>
<span class='line-number'>27</span>
<span class='line-number'>28</span>
<span class='line-number'>29</span>
<span class='line-number'>30</span>
<span class='line-number'>31</span>
<span class='line-number'>32</span>
<span class='line-number'>33</span>
<span class='line-number'>34</span>
<span class='line-number'>35</span>
<span class='line-number'>36</span>
<span class='line-number'>37</span>
<span class='line-number'>38</span>
<span class='line-number'>39</span>
</pre></td><td class='code'><pre><code class='objc'><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="n">viewImage</span><span class="err">就是获取的截图，如果要将图片存入相册，只需在后面调用</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span>
</span><span class='line'><span class="n">UIImageWriteToSavedPhotosAlbum</span><span class="p">(</span><span class="n">viewImage</span><span class="p">,</span><span class="nb">nil</span><span class="p">,</span><span class="nb">nil</span><span class="p">,</span><span class="nb">nil</span><span class="p">);</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;</span>
</span><span class='line'><span class="err">而这一切都是基于</span><span class="o">&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">UIKit</span><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;</span><span class="err">的，在</span><span class="o">&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">SpriteKit</span><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;</span><span class="err">中，上面的方法是实效的，截屏的效果就是一张白色图片</span>
</span><span class='line'><span class="err">但在苹果的官方文档中，明确提到了</span><span class="o">&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="bp">SKTexture</span><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;</span><span class="err">的作用，最后一条是说可以将节点树渲染成纹理，可以应用于对游戏截屏。苹果还告诉了我们</span><span class="o">&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="bp">SKView</span><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;</span><span class="err">的一个方法：</span><span class="o">&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="nl">textureFromNode</span><span class="p">:</span><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;</span><span class="err">，该方法将以</span><span class="n">node</span><span class="err">包含的内容渲染成一个纹理，但是如何将</span><span class="o">&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="bp">SKTexture</span><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;</span><span class="err">转换为</span><span class="o">&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="bp">UIView</span><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;</span><span class="err">呢？我在</span><span class="n">workoverflow</span><span class="err">的一个</span><span class="o">&lt;</span><span class="n">a</span> <span class="n">href</span><span class="o">=</span><span class="s">&quot;http://stackoverflow.com/questions/21061248/uiimage-from-sktexture&quot;</span><span class="o">&gt;</span><span class="err">提问</span><span class="o">&lt;/</span><span class="n">a</span><span class="o">&gt;</span><span class="err">中找到了答案：</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">h3</span><span class="o">&gt;</span><span class="err">方法一：</span><span class="o">&lt;/</span><span class="n">h3</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="err">```</span>
</span><span class='line'><span class="o">&amp;</span><span class="n">ndash</span><span class="p">;</span> <span class="p">(</span><span class="bp">UIImage</span><span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)</span> <span class="nl">imageWithView</span><span class="p">:(</span><span class="bp">UIView</span> <span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)</span><span class="n">view</span>
</span><span class='line'><span class="p">{</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">pre</span><span class="o">&gt;&lt;</span><span class="n">code</span><span class="o">&gt;</span><span class="n">UIGraphicsBeginImageContextWithOptions</span><span class="p">(</span><span class="n">view</span><span class="p">.</span><span class="n">bounds</span><span class="p">.</span><span class="n">size</span><span class="p">,</span> <span class="n">view</span><span class="p">.</span><span class="n">opaque</span><span class="p">,</span> <span class="mf">0.0</span><span class="p">);</span>
</span><span class='line'>
</span><span class='line'><span class="p">[</span><span class="n">view</span> <span class="nl">drawViewHierarchyInRect</span><span class="p">:</span><span class="n">view</span><span class="p">.</span><span class="n">bounds</span> <span class="nl">afterScreenUpdates</span><span class="p">:</span><span class="nb">YES</span><span class="p">];</span>
</span><span class='line'>
</span><span class='line'><span class="bp">UIImage</span> <span class="o">*</span> <span class="n">img</span> <span class="o">=</span> <span class="n">UIGraphicsGetImageFromCurrentImageContext</span><span class="p">();</span>
</span><span class='line'><span class="n">UIGraphicsEndImageContext</span><span class="p">();</span>
</span><span class='line'>
</span><span class='line'><span class="k">return</span> <span class="n">img</span><span class="p">;</span>
</span><span class='line'><span class="o">&lt;/</span><span class="n">code</span><span class="o">&gt;&lt;/</span><span class="n">pre</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">}</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">ul</span><span class="o">&gt;</span>
</span><span class='line'><span class="o">&lt;</span><span class="n">li</span><span class="o">&gt;&lt;</span><span class="n">p</span><span class="o">&gt;</span><span class="p">(</span><span class="bp">UIImage</span><span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)</span> <span class="nl">imageFromNode</span><span class="p">:(</span><span class="bp">SKNode</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span><span class="p">)</span><span class="n">node</span>
</span><span class='line'><span class="p">{</span>
</span><span class='line'>  <span class="bp">SKTexture</span><span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span>      <span class="n">tex</span>     <span class="o">=</span> <span class="p">[</span><span class="nb">self</span><span class="p">.</span><span class="n">scene</span><span class="p">.</span><span class="n">view</span> <span class="nl">textureFromNode</span><span class="p">:</span><span class="n">node</span><span class="p">];</span>
</span><span class='line'>  <span class="bp">SKView</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span>         <span class="n">view</span>    <span class="o">=</span> <span class="p">[[</span><span class="bp">SKView</span> <span class="n">alloc</span><span class="p">]</span><span class="nl">initWithFrame</span><span class="p">:</span><span class="n">CGRectMake</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mi">0</span><span class="p">,</span> <span class="n">tex</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">width</span><span class="p">,</span> <span class="n">tex</span><span class="p">.</span><span class="n">size</span><span class="p">.</span><span class="n">height</span><span class="p">)];</span>
</span><span class='line'>  <span class="bp">SKScene</span><span class="o">&lt;</span><span class="n">em</span><span class="o">&gt;</span>        <span class="n">scene</span>   <span class="o">=</span> <span class="p">[</span><span class="bp">SKScene</span> <span class="nl">sceneWithSize</span><span class="p">:</span><span class="n">tex</span><span class="p">.</span><span class="n">size</span><span class="p">];</span>
</span><span class='line'>  <span class="bp">SKSpriteNode</span><span class="o">&lt;/</span><span class="n">em</span><span class="o">&gt;</span>   <span class="n">sprite</span>  <span class="o">=</span> <span class="p">[</span><span class="bp">SKSpriteNode</span> <span class="nl">spriteNodeWithTexture</span><span class="p">:</span><span class="n">tex</span><span class="p">];</span>
</span><span class='line'>  <span class="n">sprite</span><span class="p">.</span><span class="n">position</span> <span class="o">=</span> <span class="n">CGPointMake</span><span class="p">(</span> <span class="n">CGRectGetMidX</span><span class="p">(</span><span class="n">view</span><span class="p">.</span><span class="n">frame</span><span class="p">),</span> <span class="n">CGRectGetMidY</span><span class="p">(</span><span class="n">view</span><span class="p">.</span><span class="n">frame</span><span class="p">)</span> <span class="p">);</span>
</span><span class='line'>  <span class="p">[</span><span class="n">scene</span> <span class="nl">addChild</span><span class="p">:</span><span class="n">sprite</span><span class="p">];</span>
</span><span class='line'>  <span class="p">[</span><span class="n">view</span> <span class="nl">presentScene</span><span class="p">:</span><span class="n">scene</span><span class="p">];</span><span class="o">&lt;/</span><span class="n">p</span><span class="o">&gt;</span>
</span><span class='line'>
</span><span class='line'><span class="o">&lt;</span><span class="n">p</span><span class="o">&gt;</span>  <span class="k">return</span> <span class="p">[</span><span class="nb">self</span> <span class="nl">imageWithView</span><span class="p">:</span><span class="n">view</span><span class="p">];</span>
</span><span class='line'><span class="p">}</span>
</span></code></pre></td></tr></table></div></figure></p></li>
<li>get the SKTexture for your node using the current SKView</li>
<li>make another SKView that is just big enough for your texture</li>
<li>add a SKSpriteNode with the texture into your new scene, placing it in the middle</li>
<li>render the view into a graphics context</li>
</ul>


<h3>方法二:</h3>

<p>&#8220;`
&ndash;(UIImage <em>)imageFromNode:(SKNode </em>)node {</p>

<pre><code>SKView *view = node.scene.view;
CGFloat scale = [UIScreen mainScreen].scale;
CGRect nodeFrame = [node calculateAccumulatedFrame];

// render SKView into UIImage
UIGraphicsBeginImageContextWithOptions(view.bounds.size, YES, 0.0);
[view drawViewHierarchyInRect:view.bounds afterScreenUpdates:YES];
UIImage *sceneSnapshot = UIGraphicsGetImageFromCurrentImageContext();
UIGraphicsEndImageContext();

// crop to the requested node (making sure to flip the y-coordinate)
CGFloat originY = sceneSnapshot.size.height*scale - nodeFrame.origin.y*scale - nodeFrame.size.height*scale;
CGRect cropRect = CGRectMake(nodeFrame.origin.x * scale, originY, nodeFrame.size.width*scale, nodeFrame.size.height*scale);
CGImageRef croppedSnapshot = CGImageCreateWithImageInRect(sceneSnapshot.CGImage, cropRect);
UIImage *nodeSnapshot = [UIImage imageWithCGImage:croppedSnapshot];
CGImageRelease(croppedSnapshot);

return nodeSnapshot;
</code></pre>

<p>}
&#8220;`
<strong>以上两个方法亲测好使！</strong></p>

<h2>使用Social.Framework分享游戏战绩</h2>

<p>因为比较懒不想在各种第三方社交网站申请APP注册然后使用SDK等，有点复杂，所以暂时用了苹果自带的Social.Framework</p>

<p>首先推荐一个比较好的<a href="https://github.com/yulingtianxia/ios6ShareDemo.git">Demo</a>，代码很容易读，容易上手</p>

<p>首先到target，Build Phases->link binary with libraries，添加social.framework，然后在要使用这个framework的文件头添加<code>@import Social;</code></p>

<p>记得要到iphone或者simulator里设置好对应社交网络的账号，填上用户名密码登录上，不然找不到account，不能post。如果找不到新浪微博，把系统语言调到中文。如果没有预先设置好账号，social.framework在真机和simulator上表现会不同。</p>

<h3>使用UIActivityViewController</h3>

<p>&#8220;`
//某个SKScene中添加的代码</p>

<pre><code>    sharingImage = [self imageFromNode:self];//获取截屏图片
    NSArray *activityItems;
    if (sharingImage != nil) {
        activityItems = @[sharingText, sharingImage];
    } else {
        activityItems = @[sharingText];
    }

    UIActivityViewController *activityController =
    [[UIActivityViewController alloc] initWithActivityItems:activityItems
                                      applicationActivities:nil];

    [(UIViewController *)[self.view nextResponder] presentViewController:activityController
                       animated:YES completion:nil];
</code></pre>

<p>&#8220;`</p>

<p><code>[self.view nextResponder]</code>的作用是获取当前<code>SKScene</code>的<code>UIViewController</code></p>

<p>如果想系统的学一下<code>UIActivityViewController</code>，建立看看这篇翻译自<a href="http://nshipster.com/uiactivityviewcontroller/">Mattt Thompson</a>的<a href="https://github.com/nixzhu/dev-blog/blob/master/2014-04-22-ui-activity-viewcontroller.md">博文</a></p>

<h3>使用SLComposeViewController</h3>

<p>这个就相当于上面里介绍的单个分享service
目前支持的平台有以下这些：</p>

<p><code>
SOCIAL_EXTERN NSString *const SLServiceTypeTwitter NS_AVAILABLE(10_8, 6_0);
SOCIAL_EXTERN NSString *const SLServiceTypeFacebook NS_AVAILABLE(10_8, 6_0);
SOCIAL_EXTERN NSString *const SLServiceTypeSinaWeibo NS_AVAILABLE(10_8, 6_0);
SOCIAL_EXTERN NSString *const SLServiceTypeTencentWeibo NS_AVAILABLE(10_9, 7_0);
SOCIAL_EXTERN NSString *const SLServiceTypeLinkedIn NS_AVAILABLE(10_9, NA);
</code>
先声明一个<code>SLComposeViewController *slComposerSheet;</code>，然后在需要添加分享逻辑的地方加入下面代码：(依然以微博为例子)</p>

<p>&#8220;`</p>

<pre><code>[slComposerSheet setCompletionHandler:^(SLComposeViewControllerResult result) {
    NSLog(@"start completion block");
    NSString *output;
    switch (result) {
        case SLComposeViewControllerResultCancelled:
            output = @"Action Cancelled";
            break;
        case SLComposeViewControllerResultDone:
            output = @"Post Successfull";
            break;
        default:
            break;
    }
    if (result != SLComposeViewControllerResultCancelled)
    {
        UIAlertView *alert = [[UIAlertView alloc] initWithTitle:@"Weibo Message" message:output delegate:nil cancelButtonTitle:@"Ok" otherButtonTitles:nil];
        [alert show];
    }
}];

if([SLComposeViewController isAvailableForServiceType:SLServiceTypeSinaWeibo])
{
    slComposerSheet = [SLComposeViewController composeViewControllerForServiceType:SLServiceTypeSinaWeibo];
    [slComposerSheet setInitialText:self.sharingText];
    [slComposerSheet addImage:self.sharingImage];
    [slComposerSheet addURL:[NSURL URLWithString:@"http://www.weibo.com/"]];
    [self presentViewController:slComposerSheet animated:YES completion:nil];
}
</code></pre>

<p>&#8220;`
这种方法我没试过，代码是照抄自前面提到的<a href="https://github.com/yulingtianxia/ios6ShareDemo.git">Demo</a>里</p>
]]></content>
  </entry>
  
</feed>
